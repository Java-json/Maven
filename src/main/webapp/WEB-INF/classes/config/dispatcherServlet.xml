<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd	
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.1.xsd"
	default-lazy-init="true">
	
	<!-- 自动扫描注解 -->
	<context:annotation-config />
	
	<!-- 只扫描@Controller 标注的类 不扫描其他标注的类 -->
	<context:component-scan base-package="com.tgb" use-default-filters="false">
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 应用属性文件读入 -->
	<bean id="applicationProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath:/config/project.properties</value>
			</list>
		</property>
	</bean>
	
	<mvc:resources mapping="/backend/**" location="/backend/"  />
	<mvc:resources mapping="/frontend/**" location="/frontend/" /> 
	<mvc:resources mapping="/resources/**" location="/resources/" /> 
	<mvc:resources mapping="/webapp/**" location="/webapp/" />
	
	 <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                 <constructor-arg value="UTF-8" />
            </bean>
           <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
                 <property name="supportedMediaTypes">  
                    <list>  
	                     <value>*</value>
                    </list>  
                </property>  
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
   
	<!-- freemarker配置 -->
	<bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	    <property name="location" value="classpath:/config/freemarker.properties"/>
	</bean>
	 
	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerSettings" ref="freemarkerConfiguration" />
		<property name="templateLoaderPath" value="/"/> 
	    <property name="freemarkerVariables">
	        <map>
	            <entry key="xml_escape" value-ref="fmXmlEscape" />
	        </map>
	    </property>
	</bean>
	 
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
	 
	 <!-- jsp视图解析器
    <bean id="jspResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/"/>
	    <property name="suffix" value=".html"/>
    </bean>        
     -->
     
    <!-- velocity视图解析器
    <bean id="velocityResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value="/"/>
	    <property name="suffix" value=".html"/>
    </bean>
	-->
	 
	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
	    <property name="cache" value="true"/>
	    <property name="prefix" value="/"/>
	    <property name="suffix" value=".html"/>
	    <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="requestContextAttribute" value="rc" />
	    <property name="contentType" value="text/html; charset=UTF-8"/>
	</bean>
	
	<!-- freemarker 配置 end -->

	<!-- 国际化,并且可以批定文件编码 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:/config/messages</value>
				<value>classpath:ValidationMessages</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>
	
	<!-- session国际化 -->
	<bean id="localeSessionResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	
	<!-- cookie国际化 -->
	<bean id="localeCookieResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
	    <!-- 设置cookieName名称，可以根据名称通过js来修改设置，也可以像上面演示的那样修改设置，默认的名称为 类名+LOCALE（即：org.springframework.web.servlet.i18n.CookieLocaleResolver.LOCALE-->
	    <property name="cookieName" value="lang"/>
	    <!-- 设置最大有效时间，如果是-1，则不存储，浏览器关闭后即失效，默认为Integer.MAX_INT-->
	    <property name="cookieMaxAge" value="100000"/>
	    <!-- 设置cookie可见的地址，默认是"/"即对网站所有地址都是可见的，如果设为其它地址，则只有该地址或其后的地址才可见-->
	    <property name="cookiePath" value="/"/>
	</bean>
	
	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 解析request的编码 ，Default is ISO-8859-1 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 设置最大允许的大小(字节)。-1表示没有限制(默认) 1024*1024*10=10MB -->
		<property name="maxUploadSize" value="1048576000" />
		<!--被允许的最大的内存的大小，Default is 10240 bytes -->
		<property name="maxInMemorySize" value="20480" />
		<!-- 一个类似懒加载的属性.可以定义该属性.让解析文件的时候再抛异常,然后Controller中定义异常处理的方法 -->
		<property name="resolveLazily" value="true" />
	</bean>
	
	<!-- 拦截器 -->
	<!-- <mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  
   		<bean class="com.honglian.common.SessionValidateInterceptor" />
   		<bean class="com.honglian.common.AuthorValidateInterceptor" />
	</mvc:interceptors> -->

	<!-- 连接事务的注解配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
</beans>
